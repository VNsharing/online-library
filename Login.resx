<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        0MQAAAAAAAAAAAE3Zp6R9wp//9k=
</value>
  </data>
</root>